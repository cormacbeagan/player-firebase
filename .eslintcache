[{"/home/mac/Projects/2day4wp/firebase-version/player/src/index.js":"1","/home/mac/Projects/2day4wp/firebase-version/player/src/App.js":"2","/home/mac/Projects/2day4wp/firebase-version/player/src/reportWebVitals.js":"3","/home/mac/Projects/2day4wp/firebase-version/player/src/utils/spotify.js":"4","/home/mac/Projects/2day4wp/firebase-version/player/src/utils/audd.js":"5","/home/mac/Projects/2day4wp/firebase-version/player/src/utils/twoday.js":"6","/home/mac/Projects/2day4wp/firebase-version/player/src/components/listen/listen.js":"7","/home/mac/Projects/2day4wp/firebase-version/player/src/utils/useDimensionSetter.js":"8","/home/mac/Projects/2day4wp/firebase-version/player/src/components/playlist/playlist.js":"9","/home/mac/Projects/2day4wp/firebase-version/player/src/components/display/display.js":"10","/home/mac/Projects/2day4wp/firebase-version/player/src/components/check/check.js":"11","/home/mac/Projects/2day4wp/firebase-version/player/src/components/volume/volume.js":"12","/home/mac/Projects/2day4wp/firebase-version/player/src/components/infolist/infolist.js":"13","/home/mac/Projects/2day4wp/firebase-version/player/src/components/info/info.js":"14","/home/mac/Projects/2day4wp/firebase-version/player/src/components/image/image.js":"15","/home/mac/Projects/2day4wp/firebase-version/player/src/utils/firebaseFunc.js":"16"},{"size":509,"mtime":1608481014588,"results":"17","hashOfConfig":"18"},{"size":3751,"mtime":1609031805662,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1608320205088,"results":"20","hashOfConfig":"18"},{"size":6894,"mtime":1609029622720,"results":"21","hashOfConfig":"18"},{"size":1104,"mtime":1608554136584,"results":"22","hashOfConfig":"18"},{"size":2767,"mtime":1608557666722,"results":"23","hashOfConfig":"18"},{"size":1498,"mtime":1609030012085,"results":"24","hashOfConfig":"18"},{"size":808,"mtime":1608562036289,"results":"25","hashOfConfig":"18"},{"size":381,"mtime":1608386675588,"results":"26","hashOfConfig":"18"},{"size":224,"mtime":1608386646912,"results":"27","hashOfConfig":"18"},{"size":517,"mtime":1608386641392,"results":"28","hashOfConfig":"18"},{"size":838,"mtime":1609030041333,"results":"29","hashOfConfig":"18"},{"size":1827,"mtime":1608563633864,"results":"30","hashOfConfig":"18"},{"size":306,"mtime":1608386659700,"results":"31","hashOfConfig":"18"},{"size":534,"mtime":1608386653300,"results":"32","hashOfConfig":"18"},{"size":1146,"mtime":1609031582686,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1e1w19e",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/home/mac/Projects/2day4wp/firebase-version/player/src/index.js",[],["73","74"],"/home/mac/Projects/2day4wp/firebase-version/player/src/App.js",[],"/home/mac/Projects/2day4wp/firebase-version/player/src/reportWebVitals.js",[],"/home/mac/Projects/2day4wp/firebase-version/player/src/utils/spotify.js",["75"],"import FirebaseFunc from './firebaseFunc';\n\nlet accessToken;\nlet clientToken;\nlet loggedIn = true;\nconst name = '2Day4Life'\nconst redirectUri = 'https://radio-player-5a684.web.app/'\n//const redirectUri = 'http://localhost:3000';\n\nconst Spotify = {\n    async getAccessToken() {\n        if (accessToken){\n            return accessToken\n        } else {\n            const spotifyKey = await FirebaseFunc.callSpotify()\n            let accessTokenMatch;\n            let timeoutInMatch;\n            let popup = \n            window.open(`https://accounts.spotify.com/authorize?client_id=${spotifyKey}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`,\n            'Login with Spotify',\n            'width=600,height=600')  \n\n// this would probably be alot better, attaching a callback to the window\n// which is then attached to the popup - this is vue... \n//https://codepen.io/leemartin/pen/EOxxYR?editors=1010\n            const timer = setInterval(() => {\n                try{\n                    accessTokenMatch = popup.location.href.match(/access_token=([^&]*)/)\n                    timeoutInMatch = popup.location.href.match(/expires_in=([^&]*)/)\n                } catch(err) {console.log(err)}\n                if(accessTokenMatch && timeoutInMatch){\n                    popup.close()\n                    clearInterval(timer)\n                    accessToken = accessTokenMatch[1]\n                    const expiresIn = Number(timeoutInMatch[1])\n                    alert('Logged in, now you can close the popup and add the song to Spotify')\n                    window.setTimeout(() => accessToken = '', expiresIn * 1000)\n                    return accessToken\n                }\n            }, 1000)\n        }\n    },\n\n    async getClientToken() {\n        if(clientToken){\n            return clientToken\n        }\n        const response = await FirebaseFunc.spotifyId();\n        clientToken = response.data.id\n        window.setTimeout(() => clientToken = '', response.data.expiresIn*1000)\n        return clientToken\n    },\n\n    async findTrackData(id) {\n        const clientId = await Spotify.getClientToken();\n        try {\n            const response = await fetch(`https://api.spotify.com/v1/tracks/${id}`, \n                {   method: 'GET',\n                    headers: {Authorization: `Bearer ${clientId}`}, \n                })\n            const data = await response.json()\n            const spotifyData = {\n                album: data.album.name,\n                image: data.album.images[1].url,\n                releaseDate: data.album.release_date,\n                popularity: data.popularity,\n                uri: data.uri,\n                spotifyId: data.id,\n                show: true,\n            }\n            return spotifyData\n        } catch(err) {console.log(err)}\n    },\n\n    async search(term) {\n        try {\n            const clientId = await Spotify.getClientToken();\n            const response = await fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`,\n                {   method: 'GET',\n                    headers: {Authorization: `Bearer ${clientId}`},\n                })\n            const data = await response.json()\n            console.log(data)\n            return data\n        } catch(err) {console.log(err)}\n    },\n\n    async setUserId() {\n        try {\n            const response = await fetch('https://api.spotify.com/v1/me', \n                {   method: 'GET',\n                    headers: {Authorization: 'Bearer ' + accessToken}\n                })\n            const data = await response.json()\n            return data.id\n        } catch(err) {console.log(err)}\n    },\n\n    async createPlaylist(userId) {\n        try {\n            const response = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, \n                {   method: 'POST',\n                    headers: {Authorization: `Bearer ${accessToken}`},\n                    body: JSON.stringify({name: name, public: true})\n                })\n            const data = await response.json()\n            return data.id\n        } catch(err) {console.log(err)}\n    },\n\n    async checkPlaylist() {\n        if(!accessToken) {\n            // this could be better - you should not need to press the button twice\n            // would need to return a promise from getAccessToken \n            Spotify.getAccessToken()\n        }\n        let playlistId\n        try {\n            const response = await fetch('https://api.spotify.com/v1/me/playlists',\n                {   method: 'GET',\n                    headers: {Authorization: 'Bearer ' + accessToken}\n                })\n            const data = await response.json()\n            const playlistArray = await data.items.map(item => ({\n                name: item.name,\n                id: item.id\n            }))\n            for (let i=0; i<playlistArray.length;i++) {\n                if(playlistArray[i].name === name) {\n                    playlistId = playlistArray[i].id\n                }\n            }\n            if(!playlistId) {\n                const userId = await Spotify.setUserId()\n                const id = await Spotify.createPlaylist(userId)\n                playlistId = id;\n            }\n            return playlistId\n        } catch (err) {console.log(err)}\n    },\n\n    async addToPlaylist(playlistId, trackUri) {\n        if(!(playlistId && trackUri)) {\n            return\n        }\n        try {\n            const id = await Spotify.setUserId()\n            const response = await fetch(`https://api.spotify.com/v1/users/${id}/playlists/${playlistId}/tracks`,\n                {   method: 'POST', \n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                        'Content-Type': 'application/json',\n                        },\n                    body: JSON.stringify({uris: [trackUri]}),\n                })\n            const data = await response.json()\n            return data\n        } catch(err) {console.log(err)}\n    },\n    \n    async checkPlaylistTracks(id, trackId, trackUri) {\n        if(!(id && trackId && trackUri)) {\n            return\n        }\n        try {\n            const response = await fetch(`https://api.spotify.com/v1/playlists/${id}/tracks`,\n                {   headers: {Authorization: `Bearer ${accessToken}`}\n                })\n            const data = await response.json()\n            const trackArray = await data.items.map(item => ({\n                id: item.track.id\n            }))\n            for (let i=0; i<trackArray.length;i++) {\n                if(trackArray[i].id === trackId) {\n                    return {displayText: 'Song already in the playlist', success: false}\n                }\n            }\n            await Spotify.addToPlaylist(id, trackUri)\n            return {displayText: 'Song added to Spotify', success: false}\n        } catch(err) {console.log(err)}\n    },\n};\nexport default Spotify;\n","/home/mac/Projects/2day4wp/firebase-version/player/src/utils/audd.js",[],"/home/mac/Projects/2day4wp/firebase-version/player/src/utils/twoday.js",[],"/home/mac/Projects/2day4wp/firebase-version/player/src/components/listen/listen.js",["76","77"],"import React, { useState, useRef, useEffect } from 'react';\nimport TwoDay from '../../utils/twoday';\nimport './listen.css';\n\nfunction Listen({onLoad}) {\n  const [ listen, setListen ] = useState('LISTEN')\n  const [ playing, setPlaying ] = useState(false)\n  const audio = useRef()\n  \n\n  \n  useEffect(() => {\n      const audioSet = audio.current;\n      const loader = () => {\n        console.log('play')\n        onLoad(audio.current);\n        TwoDay.creatingBlob(audio.current)\n      }\n      audioSet.addEventListener('playing', loader)\n      return () => {\n        audioSet.removeEventListener('playing', loader)\n      }\n  }, [])\n\n  const playAudio = (e) => {\n    e.preventDefault()\n    \n    if(playing) {\n      audio.current.src = 'about'\n      TwoDay.tearDown()\n    } else {\n      audio.current.src = 'https://radio2day.ip-streaming.net/radio2day'\n      audio.current.volume = 0.3;\n    }\n    setListen((prev) => (prev === 'LISTEN' ? 'STOP' : 'LISTEN'))\n    setPlaying(() => (playing ? false : true))\n    if(!playing) {\n      audio.current.play()\n    }\n    }\n  return (\n    <div className='divListenStyle' >\n    \n        <audio className='audioStyle' ref={audio} src='' type='audio/webm' crossOrigin=\"anonymous\" />\n          <a id=\"listen\" className='listen-btn listen-btn-white'\n          onClick={playAudio} \n          style={listen === 'STOP' ? {backgroundColor: '#0e4aa531'} : {backgroundColor: '#f744447e'}}\n          >\n          {listen}\n        </a>\n    </div>\n  );\n};\n\nexport default Listen;","/home/mac/Projects/2day4wp/firebase-version/player/src/utils/useDimensionSetter.js",[],"/home/mac/Projects/2day4wp/firebase-version/player/src/components/playlist/playlist.js",["78"],"import React from 'react';\nimport './playlist.css';\n\nfunction Playlist({ onClick}) {\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    onClick()\n  }\n \n  return (\n    \n    <div className='divPlaylistStyle'>\n       <a href='' className='playlist-btn playlist-btn-white'\n       onClick={handleClick}\n       >ADD TO PLAYLIST</a>\n    </div>\n  );\n};\n\n\n\n\nexport default Playlist;","/home/mac/Projects/2day4wp/firebase-version/player/src/components/display/display.js",[],"/home/mac/Projects/2day4wp/firebase-version/player/src/components/check/check.js",["79","80"],"import React from 'react';\nimport './check.css';\n\nfunction Check({onClick, check}){\n  \n  const handleClick = (e) => {\n    e.preventDefault()\n    onClick()\n  }\n  return (\n    <div className='divCheckStyle'>\n        <a href='' \n        className='check-btn check-btn-white check-btn-animated'\n        onClick={handleClick} \n        className={check === 'CHECK' ? 'check-btn check-btn-white ' : 'check-btn check-btn-white-checking ' }\n        >\n        {check}\n        </a>\n    </div>\n    )\n}\n\n\n  export default Check\n  ","/home/mac/Projects/2day4wp/firebase-version/player/src/components/volume/volume.js",["81"],"import React, { useEffect, useState } from 'react';\nimport './volume.css'\n\nfunction Volume({audioElement}){\n    const [ loudness, setLoudness ] = useState(0.3)\n    useEffect(() => {\n        if(audioElement){\n            audioElement.volume = loudness\n        }\n    }, [audioElement])\n\n    const handleChange = (e) => {\n        setLoudness(e.target.value)\n        if(audioElement) {\n            audioElement.volume = e.target.value\n        }\n\n    }\n\n    return (\n        <div className='volume-container'>\n            <input \n                type=\"range\" \n                className=\"volume-slider\" \n                min=\"0\" max=\"1\" \n                step=\"0.05\" \n                value={loudness}\n                onChange={handleChange}\n                onMouseMove={handleChange}\n            />\n        </div>\n    )\n};\n\nexport default Volume;","/home/mac/Projects/2day4wp/firebase-version/player/src/components/infolist/infolist.js",[],"/home/mac/Projects/2day4wp/firebase-version/player/src/components/info/info.js",[],"/home/mac/Projects/2day4wp/firebase-version/player/src/components/image/image.js",[],"/home/mac/Projects/2day4wp/firebase-version/player/src/utils/firebaseFunc.js",[],["82","83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":5,"column":5,"nodeType":"90","messageId":"91","endLine":5,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":23,"column":6,"nodeType":"94","endLine":23,"endColumn":8,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":45,"column":11,"nodeType":"98","endLine":48,"endColumn":12},{"ruleId":"96","severity":1,"message":"99","line":14,"column":8,"nodeType":"98","endLine":16,"endColumn":9},{"ruleId":"96","severity":1,"message":"99","line":12,"column":9,"nodeType":"98","endLine":16,"endColumn":10},{"ruleId":"100","severity":1,"message":"101","line":15,"column":9,"nodeType":"102","endLine":15,"endColumn":110},{"ruleId":"92","severity":1,"message":"103","line":10,"column":8,"nodeType":"94","endLine":10,"endColumn":22,"suggestions":"104"},{"ruleId":"84","replacedBy":"105"},{"ruleId":"86","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'loggedIn' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onLoad'. Either include it or remove the dependency array. If 'onLoad' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["109"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'loudness'. Either include it or remove the dependency array.",["110"],["107"],["108"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [onLoad]",{"range":"115","text":"116"},"Update the dependencies array to be: [audioElement, loudness]",{"range":"117","text":"118"},[624,626],"[onLoad]",[268,282],"[audioElement, loudness]"]